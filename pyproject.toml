[project]
name = "task-printer"
version = "0.1.0"
description = "Task Printer â€” Flask app to print tasks on thermal receipt printers"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Task Printer Contributors" }]
dependencies = [
    "annotated-types>=0.7.0",
    "appdirs>=1.4.4",
    "argcomplete>=3.6.2",
    "blinker>=1.9.0",
    "click>=8.2.1",
    "colorama>=0.4.6",
    "cssbeautifier>=1.15.4",
    "djlint>=1.36.4",
    "editorconfig>=0.17.1",
    "flask>=3.1.1",
    "flask-wtf>=1.2.2",
    "importlib-resources>=6.5.2",
    "iniconfig>=2.1.0",
    "itsdangerous>=2.2.0",
    "jinja2>=3.1.6",
    "jsbeautifier>=1.15.4",
    "json5>=0.12.1",
    "markupsafe>=3.0.2",
    "packaging>=25.0",
    "pathspec>=0.12.1",
    "pillow>=11.3.0",
    "pluggy>=1.6.0",
    "pydantic>=2.11.7",
    "pydantic-core>=2.33.2",
    "pygments>=2.19.2",
    "python-barcode>=0.15.1",
    "python-escpos>=3.1",
    "pyusb>=1.3.1",
    "pyyaml>=6.0.2",
    "qrcode>=8.2",
    "regex>=2025.7.34",
    "setuptools>=80.9.0",
    "six>=1.17.0",
    "tqdm>=4.67.1",
    "typing-extensions>=4.14.1",
    "typing-inspection>=0.4.1",
    "werkzeug>=3.0.0,<3.1.2",
    "wtforms>=3.2.1",
    "fastmcp>=2.11.0",
    "uvicorn[standard]>=0.30.6",
    "pyjwt==2.10.1",
]
[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
    "pytest==8.4.1",
]

[tool.djlint]
# Use djlint with Jinja settings. The validate script runs:
#   djlint templates --profile=jinja
# This table lets you run `djlint` from the repo root without extra flags.
profile = "jinja"

# Many lines contain long Tailwind class lists; allow longer lines to reduce noise.
max_line_length = 240

# Keep indentation consistent with our templates.
indent = 2

# Format embedded assets when present (harmless if none found).
format_js = true
format_css = true
format_json = true

# Scope linting to our Jinja templates directory by default.
include = "templates/**/*.html"

# You can add glob patterns to exclude if needed (left empty for now).
exclude = ""

# If you want to ignore specific rules later, you can list them here (e.g., "J018").
# See: https://djlint.com/docs/rules/
ignore = ""

# When running `djlint --fix`, these options influence the output formatting.
# We run lint-only by default in scripts/validate_templates.py, but keeping
# these here helps local workflows where you want to auto-fix.
preserve_blank_lines = true
preserve_formatting = false

[tool.black]
line-length = 100
target-version = ["py39"]
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["task_printer"]
src_paths = ["task_printer"]
